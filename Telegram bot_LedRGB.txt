/*Telegram bot_LedRGB*/
#include <ESP8266WiFi.h>
#include <UniversalTelegramBot.h>
#define RED_LED_PIN D6
#define GREEN_LED_PIN D7
#define BLUE_LED_PIN D8
#define AP_SSID "HSU_Students"
#define AP_PASSWORD "dhhs12cnvch"

/*Telegram*/
#include <UniversalTelegramBot.h>
#define BOTtoken "6459981410:AAGzUcH2_3YBsB01dfvrQK1QLFgv4PKVe88"
#define CHAT_ID "6728868889"
#include <WiFiClientSecure.h>
WiFiClientSecure client;
UniversalTelegramBot bot(BOTtoken, client);
X509List cert(TELEGRAM_CERTIFICATE_ROOT);
#define DB_URL "https://dmcuocdoi-a155f-default-rtdb.asia-southeast1.firebasedatabase.app/"
#define DB_SECRET "MX0BdfPfMSp5pcIMTh8BvwWfzVywxoROUaIdT1ty"


void setup() {
  Serial.begin(115200);
  initRGBLed();
  initWifi();
  initTelegram();
}

void loop() {
  int numNewMessages = bot.getUpdates(bot.last_message_received + 1);
  while (numNewMessages) {
    handleNewMessages(numNewMessages);
    numNewMessages = bot.getUpdates(bot.last_message_received + 1);
  }
  delay(100);
}

/* RGB led*/
void initRGBLed() {
  pinMode(RED_LED_PIN, OUTPUT);
  pinMode(GREEN_LED_PIN, OUTPUT);
  pinMode(BLUE_LED_PIN, OUTPUT);
}

void onRGBLed(int red, int green, int blue) {
  if (red == 1) digitalWrite(RED_LED_PIN, HIGH);
  else digitalWrite(GREEN_LED_PIN, LOW);
  if (green == 1) digitalWrite(GREEN_LED_PIN, HIGH);
  else digitalWrite(GREEN_LED_PIN, LOW);
  if (blue == 1) digitalWrite(BLUE_LED_PIN, HIGH);
  else digitalWrite(BLUE_LED_PIN, LOW);
}
/*Wifi*/
void initWifi() {
  blinkBuiltinLed(10);
  Serial.print("\nConnecting to ");
  Serial.print(AP_SSID);
  WiFi.begin(AP_SSID, AP_PASSWORD);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.print("\nWiFi connected, IP address: ");
  Serial.println(WiFi.localIP());
  WiFi.setAutoReconnect(true);
  WiFi.persistent(true);
  blinkBuiltinLed(10);
}
void blinkBuiltinLed(int n) {
  pinMode(BUILTIN_LED, OUTPUT);
  for (int i = 1; i <= n; i++) {
    digitalWrite(BUILTIN_LED, LOW);
    delay(200);
    digitalWrite(BUILTIN_LED, HIGH);
    delay(200);
  }
}

/*Telegram bot*/
void initTelegram() {
#if defined(ESP8266)
  configTime(0, 0, "pool.ntp.org");  //get UTC time via NTP
  client.setTrustAnchors(&cert);
#endif
  bot.sendMessage(CHAT_ID, "Bot started up", "");
}

void handleNewMessages(int numNewMessages) {
  Serial.println("handleNewMessages: " + String(numNewMessages));
  for (int i = 0; i < numNewMessages; i++) {
    String chat_id = String(bot.messages[i].chat_id);
    if (chat_id != CHAT_ID) {
      bot.sendMessage(chat_id, "Unauthorized user", "");
      continue;
    }
    String text = bot.messages[i].text;
    Serial.print(text);
    String from_name = bot.messages[i].from_name;
    if (text == "/start") {
      String welcome = "Welcome, " + from_name + ", ";
      welcome += "Use the following commands to control your outpute:\n";
      welcome += "/red_on to turn red_led ON\n";
      welcome += "/green_on to turn green_on ON\n";
      welcome += "/blue_on to turn blue_on ON\n";
      welcome += "/led_off to turn led_off OFF\n";
      bot.sendMessage(chat_id, welcome, "");
    } else if (text == "/red_on") {
      onRGBLed(1, 0, 0);
      bot.sendMessage(chat_id, "red_led is ON", "");
    } else if (text == "/green_on") {
      onRGBLed(0, 1, 0);
      bot.sendMessage(chat_id, "green_led is ON", "");
    } else if (text == "/bule_on") {
      onRGBLed(0, 0, 1);
      bot.sendMessage(chat_id, "blue_led is ON", "");
    } else if (text == "/led_of") {
      onRGBLed(0, 0, 0);
      bot.sendMessage(chat_id, "all_led is OFF", "");
    }
  }
}
